name: Build, Lint, and Deploy to EKS with Helm

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.5' # Adjust based on your Go version

      # Install golangci-lint
      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
          golangci-lint --version

      # Run Linter
      - name: Run golangci-lint
        run: |
          golangci-lint run --timeout 5m

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint

    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.5' # Adjust based on your Go version

      # Build Go Application
      - name: Build
        run: |
          go build -o go-web-app

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Docker Image to Dockerhub
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/go-web-app:v2 .
          docker push ${{ secrets.DOCKER_USERNAME }}/go-web-app:v2

  deploy:
    name: Deploy to EKS with Helm
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure kubectl for EKS
      - name: Configure kubectl
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Replace with your EKS cluster region

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name demo-cluster --region us-east-1

      # Install Helm
      - name: Install Helm
        uses: azure/setup-helm@v3

      # Deploy with Helm
      - name: Deploy Helm chart
        run: |
          helm upgrade --install go-web-app ./helm/go-web-app-chart \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/go-web-app \
            --set image.tag=v2 \
            --namespace default \
            --create-namespace
